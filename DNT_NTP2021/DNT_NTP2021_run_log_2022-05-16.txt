Output from the script run_me_DNT_NTP2021.R
Date Ran: 2022-05-16 
R version 4.1.1 (2021-08-10) 
USER INPUT settings:
$dat
                      apid rowi coli treatment      conc wllq wllq_notes wllt         rval
     1: 20210915_MW75-9217    1    1   7126 A1  0.100932    1               t 1.953533e+04
     2: 20210915_MW75-9217    1    2      DMSO  0.001000    1               n 2.524533e+04
     3: 20210915_MW75-9217    1    3   7126 A1  0.302796    1               t 2.293733e+04
     4: 20210915_MW75-9217    1    4   7126 A1  1.009320    1               t 2.516133e+04
     5: 20210915_MW75-9217    1    5   7126 A1  3.027960    1               t 2.535533e+04
    ---                                                                                   
250556: 20220413_MW78-7207    6    4   9163 B3  0.100000    1       <NA>    t 7.119340e-02
250557: 20220413_MW78-7207    6    5   9163 B3  0.300000    1       <NA>    t 4.521500e-02
250558: 20220413_MW78-7207    6    6   9163 B3  1.000000    1       <NA>    t 1.130900e-01
250559: 20220413_MW78-7207    6    7   9163 B3  3.000000    1       <NA>    t 0.000000e+00
250560: 20220413_MW78-7207    6    8   9163 B3 10.000000    1       <NA>    t 0.000000e+00
                                                         acsn                                             srcf units
     1:                                CCTE_Shafer_MEA_dev_AB 20210915_NFA_DNT_2021_Group 1_ Calculations.xlsx  <NA>
     2:                                CCTE_Shafer_MEA_dev_AB 20210915_NFA_DNT_2021_Group 1_ Calculations.xlsx  <NA>
     3:                                CCTE_Shafer_MEA_dev_AB 20210915_NFA_DNT_2021_Group 1_ Calculations.xlsx  <NA>
     4:                                CCTE_Shafer_MEA_dev_AB 20210915_NFA_DNT_2021_Group 1_ Calculations.xlsx  <NA>
     5:                                CCTE_Shafer_MEA_dev_AB 20210915_NFA_DNT_2021_Group 1_ Calculations.xlsx  <NA>
    ---                                                                                                             
250556: CCTE_Shafer_MEA_dev_correlation_coefficient_mean_DIV9                DNT_NTP2021_parameters_by_DIV.csv mg/ml
250557: CCTE_Shafer_MEA_dev_correlation_coefficient_mean_DIV9                DNT_NTP2021_parameters_by_DIV.csv mg/ml
250558: CCTE_Shafer_MEA_dev_correlation_coefficient_mean_DIV9                DNT_NTP2021_parameters_by_DIV.csv mg/ml
250559: CCTE_Shafer_MEA_dev_correlation_coefficient_mean_DIV9                DNT_NTP2021_parameters_by_DIV.csv mg/ml
250560: CCTE_Shafer_MEA_dev_correlation_coefficient_mean_DIV9                DNT_NTP2021_parameters_by_DIV.csv mg/ml
        treatment_srcf culture_date
     1:        7126 A1     20210915
     2:        7126 A1     20210915
     3:        7126 A1     20210915
     4:        7126 A1     20210915
     5:        7126 A1     20210915
    ---                            
250556:        9163 B3     20220413
250557:        9163 B3     20220413
250558:        9163 B3     20220413
250559:        9163 B3     20220413
250560:        9163 B3     20220413

$dataset_checks
function(dat) {
  
  # for transitioning to assigning spids later
  remove_spid_col <- FALSE
  if (!is.element("spid",names(dat))) {
    remove_spid_col <- TRUE
    dat[, spid := treatment]
  }
  
  # this section is to confirm that the data has been processed correctly
  cat("\nFinal Checks\n")
  cat("Number of cultures dates:",dat[, length(unique(sub("_.+$","",apid)))])
  cat("\nRange of culture dates:", dat[, range(sub("_.+$","",apid))] )
  cat("\nNumber of plates tested:",dat[, length(unique(apid))])
  cat("\nNumber of compounds tested:",dat[wllt == "t", length(unique(spid))])
  cat("\nAny NA or infinite rvals?\n")
  print(dat[is.na(rval) | is.infinite(rval), .N, by = "wllq"])
  cat("\nWllq breakdown for all points:\n")
  print(dat[, .N, by = "wllq"]) # note if wllq is NA anywhere
  cat("Number of unique acsn's present:",length(unique(dat$acsn)),"\n")
  check.points <- dcast(dat[, .N, by = c("acsn","apid")], apid ~ acsn, value.var = "N", fill = 0)
  setnames(check.points, old = names(check.points), new = sub("CCTE_Shafer_MEA_dev_","",names(check.points)))
  cat(paste0("The following plates don't have the expected number of points (48):\n"))
  standard_cols <- setdiff(names(check.points), c("apid"))
  pts_flag <- FALSE
  for (apidi in unique(check.points$apid)) {
    if (check.points[apid == apidi, any(.SD != 48), .SDcols = c(standard_cols)]) {
      pts_flag <- TRUE
      MEA_pts <- check.points[apid == apidi, .(sort(unique(.SD))), .SDcols = setdiff(standard_cols, c("AB","LDH"))]
      check.points[apid == apidi, MEA_pts := paste0(sort(unique(unlist(MEA_pts))),collapse=",")]
      print(check.points[apid == apidi, .SD, .SDcols = intersect(c("apid","AB","LDH","MEA_pts"),names(check.points))])
    }
  }
  if(!pts_flag) {
    cat("(all plates have the expected number of points for each assay component)\n")
  }
  
  # check number of controls per plate
  cat("\nApid/acsn pairs without 6 control wells:\n")
  print(dat[wllt == "n", .N, by = c("acsn","apid")][N != 6])
  
  # range by acsn
  cat("\nRange of rval's by acsn:\n")
  print(dat[wllq == 1, .(min = format(min(rval,na.rm=T),digits=2,scientific = F), 
                   median = format(median(rval,na.rm=T),digits=2,scientific = F),
                   max = format(max(rval,na.rm=T),digits=2,scientific = F),
                   num_NA = sum(is.na(rval))), by = "acsn"][order(acsn)])
  
  # PLOTS to visually confirm results
  
  # view all by plate
  stripchart(rval ~ sub("_","\n",apid), dat[wllq == 1 & wllt == "t" & acsn == "CCTE_Shafer_MEA_dev_firing_rate_mean_DIV12"], vertical = T, pch = 1, method = "jitter", las = 2, cex.axis = 0.75,
             col = "cornflowerblue", main = paste0(dataset_title," NFA Mean Firing Rate DIV12 by Plate"))
  stripchart(rval ~ sub("_","\n",apid), dat[wllq == 1 & wllt == "n" & acsn == "CCTE_Shafer_MEA_dev_firing_rate_mean_DIV12"], vertical = T, pch = 19, method = "jitter", las = 2, cex.axis = 0.75,
             add = T)
  legend(x = "topright", legend = c("control","all treated"), col = c("black","cornflowerblue"), pch = c(19,1), bg = "transparent")
  
  stripchart(rval ~ sub("_","\n",apid), dat[wllq == 1 & wllt == "t" & acsn == "CCTE_Shafer_MEA_dev_firing_rate_mean"], vertical = T, pch = 1, method = "jitter", las = 2, cex.axis = 0.75,
             col = "cornflowerblue", main = paste0(dataset_title," NFA Mean Firing Rate AUC by Plate"))
  stripchart(rval ~ sub("_","\n",apid), dat[wllq == 1 & wllt == "n" & acsn == "CCTE_Shafer_MEA_dev_firing_rate_mean"], vertical = T, pch = 19, method = "jitter", las = 2, cex.axis = 0.75,
             add = T)
  legend(x = "topright", legend = c("control","all treated"), col = c("black","cornflowerblue"), pch = c(19,1), bg = "transparent")
  
  stripchart(rval ~ sub("_","\n",apid), dat[wllq == 1 & wllt == "t" & acsn == "CCTE_Shafer_MEA_dev_active_electrodes_number_DIV12"], vertical = T, pch = 1, method = "jitter", las = 2, cex.axis = 0.75,
             col = "cornflowerblue", main = paste0(dataset_title," NFA # Active Electrodes DIV12 by Plate"))
  stripchart(rval ~ sub("_","\n",apid), dat[wllq == 1 & wllt == "n" & acsn == "CCTE_Shafer_MEA_dev_active_electrodes_number_DIV12"], vertical = T, pch = 19, method = "jitter", las = 2, cex.axis = 0.75,
             add = T)
  legend(x = "topright", legend = c("control","all treated"), col = c("black","cornflowerblue"), pch = c(19,1), bg = "transparent")
  
  stripchart(rval ~ sub("_","\n",apid), dat[wllq == 1 & wllt == "t" & acsn == "CCTE_Shafer_MEA_dev_active_electrodes_number"], vertical = T, pch = 1, method = "jitter", las = 2, cex.axis = 0.75,
             col = "cornflowerblue", main = paste0(dataset_title," NFA # Active Electrodes AUC by Plate"))
  stripchart(rval ~ sub("_","\n",apid), dat[wllq == 1 & wllt == "n" & acsn == "CCTE_Shafer_MEA_dev_active_electrodes_number"], vertical = T, pch = 19, method = "jitter", las = 2, cex.axis = 0.75,
             add = T)
  legend(x = "topright", legend = c("control","all treated"), col = c("black","cornflowerblue"), pch = c(19,1), bg = "transparent")
  
  # define 'plotdat' - of the AUC MFR, with specialized conc group labels
  plotdat <- dat[acsn == "CCTE_Shafer_MEA_dev_firing_rate_mean"]
  plotdat[, conc_grp := ifelse(wllt == "n",paste0(treatment,"\n",conc),signif(conc,1))]
  conc_grps <- unique(plotdat$conc_grp)
  plotdat$conc_grp <- factor(plotdat$conc_grp, levels = c(grep("\n",conc_grps,val = T),sort(unique(as.numeric(conc_grps[!grepl("\n",conc_grps)])))), ordered = T)
  
  # view all compounds together by dose
  stripchart(rval ~ conc_grp, plotdat[wllq == 1], vertical = T, pch = 1, method = "jitter", las = 2,
             main = paste0("Mean Firing Rate AUC by dose for all compounds in ",dataset_title), ylab = "CCTE_Shafer_MEA_dev_firing_rate_mean (AUC)", xlab = "conc")
  if (plotdat[, any(wllq==0)])
    stripchart(rval ~ conc_grp, plotdat[wllq == 0], vertical = T, pch = 1, method = "jitter",
               add = T, col = "red")
  legend(x = "topright", legend = c("wllq==1","wllq==0"), col = c("black","red"), pch = c(1,1), bg = "transparent")
  
  # find a compound that is likely to be a positive and plot dose response
  dat[, max_conc_by_spid := as.character(max(conc)), by = .(spid)]
  plot_spid <- dat[as.character(conc) == max_conc_by_spid & acsn == "CCTE_Shafer_MEA_dev_firing_rate_mean", .(med_rval = median(rval)), by = "spid"][med_rval == min(med_rval), spid[1]]
  plot_plates <- dat[spid == plot_spid, unique(apid)]
  stripchart(rval ~ conc_grp, plotdat[apid %in% plot_plates & (spid == plot_spid | wllt == "n") & wllq == 1], vertical = T, pch = 19, las = 2,
             col = rgb(0.1,0.1,0.1,0.5),
             ylim = range(dat[wllq == 1 & acsn == "CCTE_Shafer_MEA_dev_firing_rate_mean",rval]), ylab = "CCTE_Shafer_MEA_dev_firing_rate_mean (AUC)",
             xlab = "conc", main = paste0("Example Down Response:\n",dat[spid == plot_spid,unique(treatment)]," Mean Firing Rate AUC Dose Response"))
  if (plotdat[apid %in% plot_plates & (spid == plot_spid | wllt == "n"), any(wllq==0)])
    stripchart(rval ~ conc_grp, plotdat[apid %in% plot_plates & (spid == plot_spid | wllt == "n") & wllq == 0], vertical = T, pch = 19, las = 2,
               add = TRUE, col = rgb(0.9,0,0,0.5))
  legend(x = "topright", legend = c("wllq==1","wllq==0"), col = c(rgb(0.1,0.1,0.1,0.5),rgb(0.9,0,0,0.5)), pch = c(19,19), bg = "transparent")
  
  # Cytotox
  plotdat <- dat[grepl("(LDH)|(AB)",acsn)]
  plotdat[, conc_grp := ifelse(wllt == "n",paste0(treatment,"\n",conc),signif(conc,1))]
  conc_grps <- unique(plotdat$conc_grp)
  plotdat$conc_grp <- factor(plotdat$conc_grp, levels = c(grep("\n",conc_grps,val = T),sort(unique(as.numeric(conc_grps[!grepl("\n",conc_grps)])))), ordered = T)
  stripchart(rval ~ conc_grp, plotdat[wllq == 1 & grepl("AB",acsn)], las = 2,
             vertical = TRUE, pch = 1, method = "jitter", xlab = "conc", main = paste0("AB Blank-Corrected Values for ",dataset_title,"\nwhere wllq == 1"))
  if (nrow(plotdat[wllq == 1 & grepl("LDH",acsn)]) > 0) {
    stripchart(rval ~ conc_grp, plotdat[wllq == 1 & grepl("LDH",acsn)], las = 2,
               vertical = TRUE, pch = 1, method = "jitter", xlab = "conc", main = paste0("LDH Blank-Corrected Values for ",dataset_title,"\nwhere wllq == 1"))
  }
  
  if(remove_spid_col) dat[, spid := NULL]
  dat[, max_conc_by_spid := NULL]
  return(0)
 
}
<bytecode: 0x000001c27ba7d0f8>

$dataset_checks_wide
function(dat, normalized = FALSE, direction = '') {
  arg_table_name <- as.character(substitute(dat)) # in example, I saw deparse(substitute(dat)) as well
  dat <- as.data.table(dat)
  cat("\nFinal Checks for",arg_table_name,"\n")
  cat("Number of cultures dates:",dat[, length(unique(date))])
  cat("\nRange of culture dates:", dat[, range(date)] )
  cat("\nNumber of plates tested:",dat[, length(unique(Plate.SN))])
  cat("\nNumber of compounds tested:",dat[dose != 0, length(unique(treatment))])
  cat("\nNumber of NA values where wllq==1:\n")
  print(dat[wllq == 1, lapply(.SD, function(coli) sum(is.na(coli))), .SDcols = grep('_auc',names(dat))])
  
  cat("\nWllq breakdown for all points:\n")
  print(dat[, .N, by = "wllq"]) # note if wllq is NA anywhere
  
  cat("Plates that don't have exactly 48 wells:\n")
  print(dat[, .N, by = .(Plate.SN, date)][N != 48])
  
  # check number of controls per plate
  cat("\nPlates that don't have exactly 6 control wells:\n")
  print(dat[dose == 0 & wllq == 1, .N, by = c('date','Plate.SN')][N != 6])
  
  # PLOTS to visually confirm results
  if (normalized) {
    # adding section page to distinguish the normalized values
    plot.new()
    text(0.5, 0.5, labels = paste0(dataset_title, '\nNormalized ', direction, ' AUC Visualizations'), cex = 2)
  }
  
  # view all by plate
  dat[, apid := paste0(date,"_",Plate.SN)]
  stripchart(meanfiringrate_auc ~ sub("_","\n",apid), dat[wllq == 1 & dose != 0], vertical = T, pch = 1, method = "jitter", las = 2, cex.axis = 0.75,
             col = "cornflowerblue", main = paste0(dataset_title,if(normalized) paste0(" Normalized ",direction)," Mean Firing Rate AUC by Plate"))
  stripchart(meanfiringrate_auc ~ sub("_","\n",apid), dat[wllq == 1 & dose == 0], vertical = T, pch = 19, method = "jitter", las = 2, cex.axis = 0.75,
             add = T)
  legend(x = "topright", legend = c("control","all treated"), col = c("black","cornflowerblue"), pch = c(19,1), bg = "transparent")
  
  stripchart(nAE_auc ~ sub("_","\n",apid), dat[wllq == 1 & dose != 0], vertical = T, pch = 1, method = "jitter", las = 2, cex.axis = 0.75,
             col = "cornflowerblue", main = paste0(dataset_title,if(normalized) paste0(" Normalized ",direction)," # Active Electrodes AUC by Plate"))
  stripchart(nAE_auc ~ sub("_","\n",apid), dat[wllq == 1 & dose == 0], vertical = T, pch = 19, method = "jitter", las = 2, cex.axis = 0.75,
             add = T)
  legend(x = "topright", legend = c("control","all treated"), col = c("black","cornflowerblue"), pch = c(19,1), bg = "transparent")
  
  # define 'dat' - of the AUC MFR, with specialized conc group labels
  dat[, conc_grp := signif(dose,1)]
  conc_grps <- unique(dat$conc_grp)
  dat$conc_grp <- factor(dat$conc_grp, levels = sort(unique(dat$conc_grp)), ordered = T)
  
  # view all compounds together by dose
  stripchart(meanfiringrate_auc ~ conc_grp, dat[wllq == 1], vertical = T, pch = 1, method = "jitter", las = 2,
             main = paste0(if(normalized) paste0(" Normalized ",direction," "),"Mean Firing Rate AUC by dose for all compounds in ",dataset_title), ylab = paste0(if(normalized) paste0(" Normalized ",direction), 'Mean Firing Rate AUC'), xlab = "conc")
  if (dat[, any(wllq==0)])
    stripchart(meanfiringrate_auc ~ conc_grp, dat[wllq == 0], vertical = T, pch = 1, method = "jitter",
               add = T, col = "red")
  legend(x = "topright", legend = c("wllq==1","wllq==0"), col = c("black","red"), pch = c(1,1), bg = "transparent")
  
  # find a compound that is likely to be a positive and plot dose response
  if (grepl('[Uu]p',direction)) {
    plot_trt <- dat[dose == max(dose), .(med_rval = median(meanfiringrate_auc)), by = "treatment"][med_rval == max(med_rval), treatment[1]]
  }
  else {
    plot_trt <- dat[dose == max(dose), .(med_rval = median(meanfiringrate_auc)), by = "treatment"][med_rval == min(med_rval), treatment[1]]
  }
  plot_plates <- dat[treatment == plot_trt, unique(.SD), .SDcols = c('Plate.SN','date')]
  setkey(dat, Plate.SN, date)
  dat[J(plot_plates)]
  stripchart(meanfiringrate_auc ~ conc_grp, dat[J(plot_plates)][wllq == 1 & (treatment == plot_trt | dose == 0)], vertical = T, pch = 19, las = 2,
             col = rgb(0.1,0.1,0.1,0.5),
             ylim = range(dat[wllq == 1, meanfiringrate_auc]), ylab = paste0(if(normalized) paste0(" Normalized ",direction), 'Mean Firing Rate AUC'),
             xlab = "conc", main = paste0("trt: ",dat[treatment == plot_trt,unique(treatment)],if(normalized) paste0(" Normalized ",direction)," Mean Firing Rate AUC Dose Response"))
  if (dat[J(plot_plates)][(treatment == plot_trt | dose == 0), any(wllq == 0)])
    stripchart(rval ~ conc_grp, dat[J(plot_plates)][wllq == 0 & (treatment == plot_trt | dose == 0)], vertical = T, pch = 19, las = 2,
               add = TRUE, col = rgb(0.9,0,0,0.5))
  legend(x = "topright", legend = c("wllq==1","wllq==0"), col = c(rgb(0.1,0.1,0.1,0.5),rgb(0.9,0,0,0.5)), pch = c(19,19), bg = "transparent")
  
}

$dataset_title
[1] "DNT_NTP2021"

$default_ControlTreatmentName
[1] "DMSO"

$description
[1] "Saving a preliminary version of DNT NTP 2021\nSo that we can evalute which chemicals need to be repeated.\nWhat is left to do:\n- Confirm that all concentrations have been corrected to the exact conc consistently\n- convert all concentration units to uM\n- General data set checks (for NA, expected # of wells, etc)\nDate Ran: May 10 2022"

$pause_between_steps
[1] TRUE

$project.dir
[1] "L:/Lab/NHEERL_MEA/Project - DNT_NTP_2021"

$root_output_dir
[1] "L:/Lab/NHEERL_MEA/Carpenter_Amy/pre-process_mea_nfa_for_tcpl"

$save_notes_graphs
[1] TRUE

$scripts.dir
[1] "L:/Lab/NHEERL_MEA/Carpenter_Amy/pre-process_mea_nfa_for_tcpl/nfa-spike-list-to-mc0-r-scripts/R"

$spid_sheet
[1] "Chemical List"

$spidmap_file
[1] "L:/Lab/NHEERL_Mundy/Project - DNT Test Set 2021 NTP/Coded Plate Map - Plate No. 4001207126 DNT HEI EPA SHIP CHEM14214 MRI3110.xlsx"

$update_concs_without_prompt
[1] FALSE


Final Checks
Number of cultures dates: 11
Range of culture dates: 20210915 20220413
Number of plates tested: 60
Number of compounds tested: 117
Any NA or infinite rvals?
   wllq     N
1:    1 41582
2:    0  2537

Wllq breakdown for all points:
   wllq      N
1:    1 241375
2:    0   9185
Number of unique acsn's present: 87 
The following plates don't have the expected number of points (48):
(all plates have the expected number of points for each assay component)

Apid/acsn pairs without 6 control wells:
Empty data.table (0 rows and 3 cols): acsn,apid,N

Range of rval's by acsn:
                                                             acsn     min    median   max num_NA
 1:                                        CCTE_Shafer_MEA_dev_AB      82     24282 44036      0
 2:                                       CCTE_Shafer_MEA_dev_LDH       0      0.67   1.9      0
 3:                  CCTE_Shafer_MEA_dev_active_electrodes_number       0        64   136      0
 4:            CCTE_Shafer_MEA_dev_active_electrodes_number_DIV12       0        15    16      0
 5:             CCTE_Shafer_MEA_dev_active_electrodes_number_DIV5       0         0    16      0
 6:             CCTE_Shafer_MEA_dev_active_electrodes_number_DIV7       0         5    16      0
 7:             CCTE_Shafer_MEA_dev_active_electrodes_number_DIV9       0        12    16      0
 8:                       CCTE_Shafer_MEA_dev_burst_duration_mean       0         5   253      0
 9:                 CCTE_Shafer_MEA_dev_burst_duration_mean_DIV12   0.071      0.83    41    509
10:                  CCTE_Shafer_MEA_dev_burst_duration_mean_DIV5    0.15      0.69   101   2149
11:                  CCTE_Shafer_MEA_dev_burst_duration_mean_DIV7    0.11      0.84    74   1240
12:                  CCTE_Shafer_MEA_dev_burst_duration_mean_DIV9    0.16      0.96    78    733
13:                                CCTE_Shafer_MEA_dev_burst_rate       0       8.1    45      0
14:                          CCTE_Shafer_MEA_dev_burst_rate_DIV12       0       2.1    11      0
15:                           CCTE_Shafer_MEA_dev_burst_rate_DIV5       0         0    12      0
16:                           CCTE_Shafer_MEA_dev_burst_rate_DIV7       0       0.4    21      0
17:                           CCTE_Shafer_MEA_dev_burst_rate_DIV9       0       1.1    12      0
18:                CCTE_Shafer_MEA_dev_bursting_electrodes_number       0        34   136      0
19:          CCTE_Shafer_MEA_dev_bursting_electrodes_number_DIV12       0        14    16      0
20:           CCTE_Shafer_MEA_dev_bursting_electrodes_number_DIV5       0         0    16      0
21:           CCTE_Shafer_MEA_dev_bursting_electrodes_number_DIV7       0         1    16      0
22:           CCTE_Shafer_MEA_dev_bursting_electrodes_number_DIV9       0         4    16      0
23:              CCTE_Shafer_MEA_dev_correlation_coefficient_mean  -0.013      0.69     4      0
24:        CCTE_Shafer_MEA_dev_correlation_coefficient_mean_DIV12  -0.004       0.3  0.81      0
25:         CCTE_Shafer_MEA_dev_correlation_coefficient_mean_DIV5 -0.0062         0   0.2      0
26:         CCTE_Shafer_MEA_dev_correlation_coefficient_mean_DIV7 -0.0048    0.0026  0.49      0
27:         CCTE_Shafer_MEA_dev_correlation_coefficient_mean_DIV9  -0.006     0.083  0.64      0
28:                          CCTE_Shafer_MEA_dev_firing_rate_mean       0         8    36      0
29:                    CCTE_Shafer_MEA_dev_firing_rate_mean_DIV12       0       1.6    11      0
30:                     CCTE_Shafer_MEA_dev_firing_rate_mean_DIV5       0         0   8.1      0
31:                     CCTE_Shafer_MEA_dev_firing_rate_mean_DIV7       0      0.77   8.1      0
32:                     CCTE_Shafer_MEA_dev_firing_rate_mean_DIV9       0       1.1   5.9      0
33:         CCTE_Shafer_MEA_dev_inter_network_spike_interval_mean       0       475  2483      0
34:   CCTE_Shafer_MEA_dev_inter_network_spike_interval_mean_DIV12     0.2        33   794    545
35:    CCTE_Shafer_MEA_dev_inter_network_spike_interval_mean_DIV5      54       167   690   2506
36:    CCTE_Shafer_MEA_dev_inter_network_spike_interval_mean_DIV7     0.2       147   821   1723
37:    CCTE_Shafer_MEA_dev_inter_network_spike_interval_mean_DIV9     1.3       136   769    975
38:                  CCTE_Shafer_MEA_dev_interburst_interval_mean       0       184   616      0
39:            CCTE_Shafer_MEA_dev_interburst_interval_mean_DIV12     1.1        30   125    509
40:             CCTE_Shafer_MEA_dev_interburst_interval_mean_DIV5     1.1        41   126   2149
41:             CCTE_Shafer_MEA_dev_interburst_interval_mean_DIV7    0.92        34   121   1240
42:             CCTE_Shafer_MEA_dev_interburst_interval_mean_DIV9     1.1        38   117    733
43:                   CCTE_Shafer_MEA_dev_mutual_information_norm       0     0.018  0.21      0
44:             CCTE_Shafer_MEA_dev_mutual_information_norm_DIV12       0    0.0095 0.076      0
45:              CCTE_Shafer_MEA_dev_mutual_information_norm_DIV5       0         0 0.005      0
46:              CCTE_Shafer_MEA_dev_mutual_information_norm_DIV7       0 0.0000053 0.019      0
47:              CCTE_Shafer_MEA_dev_mutual_information_norm_DIV9       0   0.00069 0.036      0
48:                CCTE_Shafer_MEA_dev_network_spike_duration_std       0      0.25   2.8      0
49:          CCTE_Shafer_MEA_dev_network_spike_duration_std_DIV12  0.0019     0.086  0.73    545
50:           CCTE_Shafer_MEA_dev_network_spike_duration_std_DIV5   0.001      0.04  0.47   2506
51:           CCTE_Shafer_MEA_dev_network_spike_duration_std_DIV7       0     0.043  0.34   1723
52:           CCTE_Shafer_MEA_dev_network_spike_duration_std_DIV9       0     0.082  0.68    975
53:                      CCTE_Shafer_MEA_dev_network_spike_number       0        41   562      0
54:                CCTE_Shafer_MEA_dev_network_spike_number_DIV12       0        20   326      0
55:                 CCTE_Shafer_MEA_dev_network_spike_number_DIV5       0         0    17      0
56:                 CCTE_Shafer_MEA_dev_network_spike_number_DIV7       0         0    63      0
57:                 CCTE_Shafer_MEA_dev_network_spike_number_DIV9       0         3    90      0
58:                        CCTE_Shafer_MEA_dev_network_spike_peak       0        61   136      0
59:                  CCTE_Shafer_MEA_dev_network_spike_peak_DIV12       5        15    16    537
60:                   CCTE_Shafer_MEA_dev_network_spike_peak_DIV5     5.7        15    16   2463
61:                   CCTE_Shafer_MEA_dev_network_spike_peak_DIV7       5        14    16   1536
62:                   CCTE_Shafer_MEA_dev_network_spike_peak_DIV9       5        15    16    861
63:             CCTE_Shafer_MEA_dev_per_burst_interspike_interval       0      0.31   1.3      0
64:       CCTE_Shafer_MEA_dev_per_burst_interspike_interval_DIV12  0.0062     0.027   0.2    509
65:        CCTE_Shafer_MEA_dev_per_burst_interspike_interval_DIV5   0.024     0.083  0.27   2149
66:        CCTE_Shafer_MEA_dev_per_burst_interspike_interval_DIV7   0.013     0.082  0.27   1240
67:        CCTE_Shafer_MEA_dev_per_burst_interspike_interval_DIV9   0.011     0.053  0.24    733
68:                   CCTE_Shafer_MEA_dev_per_burst_spike_percent       0       259   737      0
69:             CCTE_Shafer_MEA_dev_per_burst_spike_percent_DIV12       0        77   100      0
70:              CCTE_Shafer_MEA_dev_per_burst_spike_percent_DIV5       0         0    99      0
71:              CCTE_Shafer_MEA_dev_per_burst_spike_percent_DIV7       0        12    99      0
72:              CCTE_Shafer_MEA_dev_per_burst_spike_percent_DIV9       0        41    99      0
73:       CCTE_Shafer_MEA_dev_per_network_spike_spike_number_mean       0       385  1101      0
74: CCTE_Shafer_MEA_dev_per_network_spike_spike_number_mean_DIV12     8.5        97   214    537
75:  CCTE_Shafer_MEA_dev_per_network_spike_spike_number_mean_DIV5       8        76   157   2463
76:  CCTE_Shafer_MEA_dev_per_network_spike_spike_number_mean_DIV7       8        72   197   1536
77:  CCTE_Shafer_MEA_dev_per_network_spike_spike_number_mean_DIV9       8       102   210    861
78:           CCTE_Shafer_MEA_dev_per_network_spike_spike_percent       0        22   279      0
79:     CCTE_Shafer_MEA_dev_per_network_spike_spike_percent_DIV12       0       9.3    58      0
80:      CCTE_Shafer_MEA_dev_per_network_spike_spike_percent_DIV5       0         0    34      0
81:      CCTE_Shafer_MEA_dev_per_network_spike_spike_percent_DIV7       0         0    48      0
82:      CCTE_Shafer_MEA_dev_per_network_spike_spike_percent_DIV9       0       2.2    47      0
83:                       CCTE_Shafer_MEA_dev_spike_duration_mean       0       1.4   6.2      0
84:                 CCTE_Shafer_MEA_dev_spike_duration_mean_DIV12    0.05      0.28   1.5    537
85:                  CCTE_Shafer_MEA_dev_spike_duration_mean_DIV5    0.05      0.25   0.7   2463
86:                  CCTE_Shafer_MEA_dev_spike_duration_mean_DIV7    0.05      0.32  0.74   1536
87:                  CCTE_Shafer_MEA_dev_spike_duration_mean_DIV9    0.05      0.43   1.4    861
                                                             acsn     min    median   max num_NA
[1] 0
